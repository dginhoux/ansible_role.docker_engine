---


- block:
    # install the docker repository
    - ansible.builtin.include_tasks:
        file: "tasks/sub-tasks/repo-{{ ansible_os_family }}.yml"
      when: not docker_engine_skip_repo

    # install python-pip
    - ansible.builtin.include_tasks:
        file: tasks/sub-tasks/setup-python-pip.yml

    # install the docker dependencies
    - name: install docker dependencies
      ansible.builtin.package:
        name: "{{ docker_dependencies }}"
        state: present
      when: not docker_engine_skip_containerd 
            or
            not docker_engine_skip_engine

    # install containerd
    - ansible.builtin.include_tasks:
        file: tasks/sub-tasks/setup-containerd.yml
      when: not docker_engine_skip_containerd

    # install the docker engine
    - ansible.builtin.include_tasks:
        file: tasks/sub-tasks/setup-docker-engine.yml
      when: not docker_engine_skip_engine

    # install the docker cli
    - ansible.builtin.include_tasks:
        file: tasks/sub-tasks/setup-docker-cli.yml
      when: not docker_engine_skip_cli

    # adds the docker admin users to the docker group
    - ansible.builtin.include_tasks:
        file: tasks/sub-tasks/setup-docker-group.yml
      when: not docker_engine_skip_group

    # install docker-py
    - ansible.builtin.include_tasks:
        file: tasks/sub-tasks/setup-docker-py.yml
      when: not docker_engine_skip_docker_py
  when: docker_deploy_action == "install"


- block:
    - name: remove docker engine
      ansible.builtin.package:
        name: "{{ item }}"
        state: absent
      with_items:
        - "{{ docker_package_name }}"
        - "{{ docker_cli_package_name }}"
        - "{{ containerd_package_name }}"
    
    - name: remove group
      group: 
        name: "{{ docker_group_name }}"
        state: absent
  when: docker_deploy_action == "uninstall"
